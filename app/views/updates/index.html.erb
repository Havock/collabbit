<%
# View which displays the list of updates in an incident.  
#
# Author::      Eli Fox-Epstein, efoxepstein@wesleyan.edu
# Author::      Dimitar Gochev, dimitar.gochev@trincoll.edu
# Copyright::   Humanitarian FOSS Project (http://www.hfoss.org), Copyright (C) 2009.
# License::     http://www.gnu.org/copyleft/lesser.html GNU Lesser General Public License (LGPL)
%>

<% content_for :title, title('Updates', @incident.name, 'Incidents', @instance.short_name)%>
<% content_for :javascripts, javascript_include_tag('jquery', 'jquery.multifile', 'updates')%>

<% content_for :breadcrumbs, 
	breadcrumbs(['Overview',overview_url],
				['Incidents',incidents_path]) %>
<% content_for :subheader_title, @incident.name %>
<% content_for :buttons do %>
	<% if can? :destroy => @incident %>
		<%= pretty_delete_button(@incident, :check => true) %>
	<% end %>	

	<% if can? :update => @incident %>
		<%= pretty_button(:edit_incident, edit_incident_path(@incident), 'Edit Incident') %>
		<%= pretty_button(:close_incident, incident_close_path(@incident), @incident.closed_at ? 'Reopen Incident' : 'Close Incident') %>
	<% end %>
	<% if can? :create => Update %>
		<%= pretty_button(:add_update, new_incident_update_path(@incident), 'Add Update')%>
	<% end %>
<% end %>
<% content_for :subheader_text, subheader_text(@incident.description) %>
<% content_for :filters do %>
	<%	# there's probably a better place to be doing the require,
		# but this code is much more efficient and more compact
		# than what was here before
		require 'set'
		groups = Set.new
		tags = Set.new
		@incident.updates.each do |u|
			groups.merge u.relevant_groups
			groups.add u.issuing_group unless u.issuing_type == :user || !u.issuing_group
			tags.merge u.tags
		end
	%>
		
	<% form_tag incident_updates_path(@incident), :method => :get do %>
		<%= text_field_tag :search, (params[:search] || 'Search Keywords'), :size => 20, :class=>(!params[:search] || params[:search] == '' ? 'blank':'') %>
					
		<select name="groups_filter" id="filters_groups">
			<%= options_for_select([['All Groups', nil],['My Groups', 'mine']]+groups.map{|g|[g.name, g.id]}, @groups_filter) %>
		</select>
		<select name="tags_filter" id="filters_tags">
			<%= options_for_select([['All Tags', nil]] + tags.map{|g|[g.name, g.id]}, @tags_filter) %>
		</select>    				
		<%= submit_tag "Apply Filters", :name => nil, :id => "filters_submit" %>
	<% end %>
<% end %>


<% content_for :body do %>
	<% if @incident.closed_at? %>
	<h2 id="incident-closed">
		Incident Closed
	</h2>
	<% end %>
	<% unless @incident.updates.empty? %>
	<ul id="updates-list">
	<% @updates.each do |u| %>
		<li>
			<%= link_to u.title, incident_update_path(@incident, u), :class => 'update-title' %>
			<span class="update-meta">by 
				<%= issuer_link(u)%>, <%= 'updated ' if u.updated_at > u.created_at %> <%= time_mdy u.updated_at %></span>
			<p class="update-text">
				<%=simple_format(h(u.text)).split('</p>')[0][0..256] %><%='...' if u.text.length > 256%>
			</p>
		<% unless u.attachments.empty? %>
			<div class="attachments">
				<strong>Attached Files:</strong>
				<ul>
				<% u.attachments.each do |f| %>
					<li><%=link_to f.attach.original_filename, f.attach.url%></li>
				<% end %>
				</ul>
			</div>				
		<% end
		   unless u.relevant_groups.empty? %>
			<div class="relevant-groups">
				<em>Relevant Groups:</em>
				<ul>
				<% u.relevant_groups.each do |g| %>
					<li><%=link_to g.name, group_type_group_path(g.group_type, g) %></li>		
				<% end %>	
				</ul>
			</div>
		<% end 
		   unless u.tags.empty? %>
			<div class="tags">
				<em>Tags:</em>
				<ul>
				<% u.tags.each do |t| %>
					<li><%=link_to t.name, t %></li>
				<% end %>
				</ul>
			</div>
		<% end %>
		  <div class="comments">
			<em>Comments</em>
			<% u.comments.each do |c| %>
			  <div class="comment"><span class="comment-body"><%=c.body%></span>
				by <span class="comment-author"><%=c.user.full_name%></span>
				on <span class="comment-date"><%=mdy c.created_at%></span></div>
			<% end %>
			<% form_for [u.incident, u, Comment.new] do |f| %>
			  <%= f.text_field :body %>
			  <%= f.submit 'Add Comment' %>
			<% end %>
		  </div>
		</li>
	<% end %>
	</ul>
	<% else %>
	<h3 class="centered">This incident has no updates. <%=link_to 'Click here to add an update', new_incident_update_path(@incident) if can?(:create => Update)%>.</h3>
	<% end %>
	<%= will_paginate @updates %>
<% end %>
